// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//ENUMS

enum tipoComentario {
  positivo
  negativo
}

//TABLAS
model Rol {
  id      Int       @id @default(autoincrement())
  tipo    String
  usuario Usuario[]

  @@map("rol")
}

model Usuario {
  id             Int      @id @default(autoincrement())
  rol            Rol      @relation(fields: [idRol], references: [id])
  idRol          Int      @map("id_rol")
  nombre         String
  email          String   @unique
  contrasenha    String
  fechaCreacion  DateTime @map("fecha_creacion")
  fechaEliminado DateTime? @map("fecha_eliminado")

  @@map("usuario")
}

model Pelicula {
  id           Int                @id
  portada      String?            @db.VarChar(300)
  titulo       String             @db.VarChar(80)
  reparto      ActoresPeliculas[]
  trama        String             @db.VarChar(1000)
  duracion     Int
  director     String
  anho         Int
  valoraciones Float?
  generos      GenerosPeliculas[]

  @@map("pelicula")
}

model Genero {
  id        Int                @id
  nombre    String
  peliculas GenerosPeliculas[]

  @@map("genero")
}

model GenerosPeliculas {
  genero     Genero   @relation(fields: [idGenero], references: [id])
  idGenero   Int      @map("id_genero")
  pelicula   Pelicula @relation(fields: [idPelicula], references: [id])
  idPelicula Int      @map("id_pelicula")

  @@id([idGenero, idPelicula])
  @@map("generos_peliculas")
}

model Actor {
  id        Int                @id
  nombre    String
  imagen    String?            @db.VarChar(300)
  peliculas ActoresPeliculas[]

  @@map("actor")
}

model ActoresPeliculas {
  actor      Actor    @relation(fields: [idActor], references: [id])
  idActor    Int      @map("id_actor")
  pelicula   Pelicula @relation(fields: [idPelicula], references: [id])
  idPelicula Int      @map("id_pelicula")
  personaje  String

  @@id([idActor, idPelicula])
  @@map("actores_peliculas")
}
